# Name: 
# ID: 

# Execution begins at address 0 
	.pos 0
	irmovq  stack, %rsp  	# Set up stack pointer
	call    main		    # Execute main program
	halt			        # Terminate program 

# Sample linked list
.align 8
ele1:
    .quad   0x00a
    .quad   ele2
ele2:
    .quad   0x0b0
    .quad   ele3
ele3:
    .quad   0xc00
    .quad   0

main:
    irmovq  ele1, %rdi
    call    sum_list        # sum_list(ele1)
    ret

# long sum_list(list_ptr ls)
# ls in %rdi
sum_list:
    xorq    %rax, %rax      # sum = 0
    jmp     do_you_want_to_continue_or_stop_loop_master_meow
    
loop_meow:
    mrmovq  (%rdi), %r8     # Get *ls
    addq    %r8, %rax       # sum += ls->val
    mrmovq  8(%rdi), %rdi   # ls = ls->next

do_you_want_to_continue_or_stop_loop_master_meow:
    andq    %rdi, %rdi      # Set CC
    jne     loop_meow       # Stop when 0
    ret

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
